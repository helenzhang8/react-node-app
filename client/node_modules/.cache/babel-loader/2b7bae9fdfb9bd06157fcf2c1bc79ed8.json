{"ast":null,"code":"var _jsxFileName = \"/Users/helenzhang/Desktop/Summer 2021/Basil/react-node-app/client/src/MapViewScratch.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport ReactMapGL, { Marker } from 'react-map-gl';\nimport { useState } from \"react\";\nimport { Button, Fade } from \"@material-ui/core\"; // import PulsingDot from \"../assets/PulsingDot/PulsingDot\";\n// import {enums} from \"../utils/enums\";\n// import 'mapbox-gl/dist/mapbox-gl.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = 'pk.eyJ1IjoiYmxibGJsNDQiLCJhIjoiY2twcGY2OTN0MGZqazJ1cWpoM2h5eDl5NSJ9.5uYgki649OhuoI6Bw7R3ag';\nexport default function Map({\n  allLocations,\n  setMarkerToDisplay\n}) {\n  _s();\n\n  // console.log(\"allLocations\", allLocations)\n  const [viewport, setViewport] = React.useState({\n    longitude: allLocations.length > 0 ? parseFloat(allLocations[0].latlon.split(\", \")[1]) : -73.9361965,\n    latitude: allLocations.length > 0 ? parseFloat(allLocations[0].latlon.split(\", \")[0]) : 40.6780116,\n    zoom: 20\n  });\n  const [userLocation, setUserLocation] = useState({\n    longitude: -73.9361965,\n    latitude: 40.6780116\n  });\n\n  function locateUser() {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(position);\n      setViewport({\n        longitude: position.coords.longitude,\n        latitude: position.coords.latitude,\n        zoom: 20\n      });\n      setUserLocation({\n        longitude: position.coords.longitude,\n        latitude: position.coords.latitude\n      });\n    });\n  }\n\n  function deduceIconType(locationObject) {\n    switch (locationObject) {\n      case true:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83D\\uDE98\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this);\n\n      case false:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83C\\uDD7F\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fade, {\n    in: true,\n    timeout: 1000,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        zIndex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(ReactMapGL, {\n        mapboxApiAccessToken: token,\n        ...viewport,\n        width: \"100%\",\n        height: '100vh',\n        onViewportChange: setViewport,\n        mapStyle: 'mapbox://styles/blblbl44/ckpu5h6mz30ti17s9c9o19y8s',\n        children: [allLocations.map(location => {\n          return /*#__PURE__*/_jsxDEV(CustomMarker, {\n            latitude: parseFloat(location.latlon.split(\", \")[0]),\n            longitude: parseFloat(location.latlon.split(\", \")[1]),\n            viewport: viewport,\n            name: location._id,\n            setMarkerToDisplay: setMarkerToDisplay,\n            icon: deduceIconType(location.status),\n            locationObject: location\n          }, location._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(CustomMarker, {\n          latitude: userLocation.latitude,\n          longitude: userLocation.longitude,\n          name: \"You Are Here\",\n          viewport: viewport // icon={<PulsingDot/>}\n          ,\n          setMarkerToDisplay: null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          position: \"fixed\",\n          bottom: 30,\n          right: 20,\n          backgroundColor: \"green\",\n          color: \"white\"\n        },\n        variant: \"contained\",\n        \"aria-label\": \"add\",\n        onClick: () => locateUser(),\n        children: \"Locate Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Map, \"VlWgG90wXRRMdMhx+dLBGhxidiY=\");\n\n_c = Map;\n\nfunction CustomMarker(props) {\n  _s2();\n\n  const [showPopup, togglePopup] = React.useState(false);\n  const {\n    longitude,\n    latitude,\n    viewport,\n    name,\n    setMarkerToDisplay,\n    icon,\n    locationObject\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      transition: \"ease-in\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Marker, {\n      latitude: latitude,\n      longitude: longitude,\n      offsetLeft: -20,\n      offsetTop: -10,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          togglePopup(!showPopup);\n          setMarkerToDisplay(locationObject);\n        },\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(CustomMarker, \"wLsyBo4aUKLWiUgRoKSj9R3nuxI=\");\n\n_c2 = CustomMarker;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"CustomMarker\");","map":{"version":3,"sources":["/Users/helenzhang/Desktop/Summer 2021/Basil/react-node-app/client/src/MapViewScratch.js"],"names":["React","ReactMapGL","Marker","useState","Button","Fade","token","Map","allLocations","setMarkerToDisplay","viewport","setViewport","longitude","length","parseFloat","latlon","split","latitude","zoom","userLocation","setUserLocation","locateUser","navigator","geolocation","getCurrentPosition","position","console","log","coords","deduceIconType","locationObject","top","left","width","height","zIndex","map","location","_id","status","bottom","right","backgroundColor","color","CustomMarker","props","showPopup","togglePopup","name","icon","transition"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport ReactMapGL, {Marker} from 'react-map-gl';\r\nimport {useState} from \"react\";\r\nimport {Button, Fade} from \"@material-ui/core\";\r\n// import PulsingDot from \"../assets/PulsingDot/PulsingDot\";\r\n// import {enums} from \"../utils/enums\";\r\n// import 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nconst token = 'pk.eyJ1IjoiYmxibGJsNDQiLCJhIjoiY2twcGY2OTN0MGZqazJ1cWpoM2h5eDl5NSJ9.5uYgki649OhuoI6Bw7R3ag'\r\n\r\n\r\nexport default function Map({allLocations, setMarkerToDisplay}) {\r\n    // console.log(\"allLocations\", allLocations)\r\n    const [viewport, setViewport] = React.useState({\r\n        longitude: allLocations.length > 0 ? parseFloat(allLocations[0].latlon.split(\", \")[1]) : -73.9361965,\r\n        latitude: allLocations.length > 0 ? parseFloat(allLocations[0].latlon.split(\", \")[0]) : 40.6780116,\r\n        zoom: 20\r\n    });\r\n\r\n    const [userLocation, setUserLocation] = useState({\r\n        longitude: -73.9361965,\r\n        latitude: 40.6780116,\r\n    })\r\n\r\n    function locateUser() {\r\n        navigator.geolocation.getCurrentPosition(function (position) {\r\n            console.log(position)\r\n            setViewport({longitude: position.coords.longitude, latitude: position.coords.latitude, zoom: 20})\r\n            setUserLocation({longitude: position.coords.longitude, latitude: position.coords.latitude})\r\n        });\r\n    }\r\n\r\n    function deduceIconType(locationObject) {\r\n        switch (locationObject) {\r\n            case true:\r\n                return (\r\n                    <p>🚘</p>\r\n                )\r\n            case false:\r\n                return (\r\n                    <p>🅿️</p>\r\n                )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fade in timeout={1000}>\r\n            <div style={{position: \"fixed\", top: 0, left: 0, width: '100vw', height: '100vh', zIndex: 1}}>\r\n\r\n                <ReactMapGL mapboxApiAccessToken={token} {...viewport} width=\"100%\" height={'100vh'}\r\n                            onViewportChange={setViewport}\r\n                            mapStyle={'mapbox://styles/blblbl44/ckpu5h6mz30ti17s9c9o19y8s'}\r\n                >\r\n                    {allLocations.map(location => {\r\n                        return (\r\n                            <CustomMarker key={location._id} latitude={parseFloat(location.latlon.split(\", \")[0])}\r\n                                          longitude={parseFloat(location.latlon.split(\", \")[1])} viewport={viewport}\r\n                                          name={location._id} setMarkerToDisplay={setMarkerToDisplay}\r\n                                          icon={deduceIconType(location.status)}\r\n                                          locationObject={location}\r\n                            />)\r\n                    })}\r\n\r\n                    <CustomMarker\r\n                        latitude={userLocation.latitude}\r\n                        longitude={userLocation.longitude}\r\n                        name={\"You Are Here\"}\r\n                        viewport={viewport}\r\n                        // icon={<PulsingDot/>}\r\n                        setMarkerToDisplay={null}\r\n                    />\r\n\r\n                </ReactMapGL>\r\n\r\n                <Button style={{\r\n                    position: \"fixed\",\r\n                    bottom: 30,\r\n                    right: 20,\r\n                    backgroundColor: \"green\",\r\n                    color: \"white\",\r\n                }}\r\n                        variant={\"contained\"}\r\n                        aria-label=\"add\"\r\n                        onClick={() => locateUser()}>\r\n                    Locate Me\r\n                </Button>\r\n            </div>\r\n        </Fade>\r\n    );\r\n}\r\n\r\nfunction CustomMarker(props) {\r\n    const [showPopup, togglePopup] = React.useState(false);\r\n\r\n    const {longitude, latitude, viewport, name, setMarkerToDisplay, icon, locationObject} = props;\r\n\r\n    return (\r\n        <div style={{transition: \"ease-in\"}}>\r\n            <Marker latitude={latitude} longitude={longitude} offsetLeft={-20} offsetTop={-10}>\r\n                <div onClick={() => {\r\n                    togglePopup(!showPopup)\r\n                    setMarkerToDisplay(locationObject)\r\n                }}>{icon}</div>\r\n            </Marker>\r\n            {/*// uncomment if we want to have a pop up when the marker is clicked*/}\r\n            {/*{showPopup && <Popup*/}\r\n            {/*    latitude={latitude} longitude={longitude}*/}\r\n            {/*    closeButton={true}*/}\r\n            {/*    closeOnClick={false}*/}\r\n            {/*    onClose={() => togglePopup(false)}*/}\r\n            {/*    anchor=\"top\">*/}\r\n            {/*    <Grid container alignContent={\"center\"} alignItems={\"center\"}>*/}\r\n            {/*        <Grid item xs={12}>*/}\r\n            {/*            <Typography><strong>{name}</strong></Typography>*/}\r\n            {/*        </Grid>*/}\r\n\r\n            {/*        <Grid item xs={12}>*/}\r\n            {/*            <Typography>category</Typography>*/}\r\n            {/*        </Grid>*/}\r\n\r\n            {/*    </Grid>*/}\r\n            {/*</Popup>}*/}\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}